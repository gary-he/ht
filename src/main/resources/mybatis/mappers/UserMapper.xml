<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tarena.ht.mapper.UserMapper">

	<!-- 查询所有用户 -->
	<select id="findAll" resultMap="userRM">
		select * 
		from
		    (select * 
		    from user_p u
		    left join
		        (select user_info_id,name,card_no,manager_id,m.m_name,join_date,salary,birthday,gender,station,telephone,user_level,remark,order_no
		        from user_info_p u
		        left join (select user_info_id m_id,name m_name from user_info_p) m
		        on u.manager_id=m.m_id) info
		    on u.user_id=info.user_info_id) u
		left join
		     (select dept_id p_id,dept_name from dept_p) p
		on u.dept_id=p.p_id
		
	</select>
	
	<!-- 查询对应id的用户 -->
	<select id="findOne" resultMap="userRM">
		select * 
	    from
	        (select * 
	        from (select * from user_p where user_id=#{userId}) u
	        left join
	            (select user_info_id,name,card_no,manager_id,m.m_name,join_date,salary,birthday,gender,station,telephone,user_level,remark,order_no
	            from user_info_p u
	            left join (select user_info_id m_id,name m_name from user_info_p) m
	            on u.manager_id=m.m_id) info
	        on u.user_id=info.user_info_id) u
	    left join
	         (select dept_id p_id,dept_name from dept_p) p
	    on u.dept_id=p.p_id
	</select>
	
	<!-- 根据用户名查询用户信息 -->
	<select id="findUserByUserName" resultMap="userRM">
	
	</select>
	
	<resultMap type="User" id="userRM" autoMapping="true">
		<id column="user_id" property="userId"/>
		
		<association property="dept" javaType="Dept">
			<id column="dept_id" property="deptId"/>
			<result column="dept_name" property="deptName"/>
		</association>
		
		<association property="userInfo" javaType="UserInfo">
			<id column="user_id" property="userInfoId"/>
			<result column="name" property="name"/>
			<result column="card_no" property="cardNo"/>
			<result column="join_date" property="joinDate"/>
			<result column="salary" property="salary"/>
			<result column="birthday" property="birthday"/>
			<result column="gender" property="gender"/>
			<result column="station" property="station"/>
			<result column="telephone" property="telephone"/>
			<result column="user_level" property="userLevel"/>
			<result column="remark" property="remark"/>
			<result column="order_no" property="orderNo"/>
			
			<association property="manager" javaType="UserInfo">
				<id column="manager_id" property="userInfoId"/>
				<result column="m_name" property="name"/>
			</association>
		</association>
	</resultMap>


	<!-- 修改用户状态 -->
	<update id="updateState">
		update user_p set state=#{state} where user_id in(
		<foreach collection="userIds" item="userId" separator=",">
			#{userId}
		</foreach>
		)
	</update>
	
	<!-- 修改用户 -->
	<update id="updateUser">
		update user_p set 
			dept_id=#{dept.deptId},
			username=#{username},
			password=#{password},
			state=#{state},
			create_by = #{createBy,jdbcType=VARCHAR},
			create_dept = #{createDept,jdbcType=VARCHAR},
			create_time = #{createTime,jdbcType=DATE},
			update_by = #{updateBy,jdbcType=VARCHAR},
			update_time = #{updateTime,jdbcType=DATE}
		where user_id=#{userId}
	</update>
	
	<!-- 增加用户 -->
	<insert id="insertUser">
		insert into user_p values(
			#{userId},
			#{dept.deptId},
			#{username},
			#{password},
			#{state,jdbcType=VARCHAR},
			#{createBy,jdbcType=VARCHAR},
			#{createDept,jdbcType=VARCHAR},
			#{createTime,jdbcType=DATE},
			#{updateBy,jdbcType=VARCHAR},
			#{updateTime,jdbcType=DATE}
		)
	</insert>
	
	<!-- 插入指定用户的角色信息 -->
	<insert id="saveUserRole">
		insert into role_user_p values(#{roleId},#{userId})
	</insert>
	
	<!-- 删除指定用户 -->
	<delete id="deleteUser">
		delete from user_p where user_id in(
			<foreach collection="array" item="userId" separator=",">
				#{userId}
			</foreach>
		)
	</delete>
	
	<!-- 删除指定用户的所有角色信息 -->
	<delete id="deleteUserRoleByUserId">
		delete from role_user_p where user_id=#{userId}
	</delete>
</mapper>